#!/bin/bash
# build-root-amd64.sh - Build Cal.com for linux/amd64 from root directory

set -e

echo "üöÄ Building Cal.com for linux/amd64 from root directory..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å buildx
if ! docker buildx version &> /dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: Docker buildx –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
echo "üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ GHCR..."
if ! gh auth token | docker login ghcr.io -u writepavel --password-stdin; then
    echo "‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ 'gh auth login' –≤—ã–ø–æ–ª–Ω–µ–Ω"
    exit 1
fi

# –°–æ–∑–¥–∞—Ç—å builder –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ buildx builder..."
docker buildx create --name calcom-root-amd64-builder --use 2>/dev/null || docker buildx use calcom-root-amd64-builder

# –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ builder
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ builder:"
docker buildx ls | grep calcom-root-amd64-builder || echo "Using default builder"

echo ""
echo "üèóÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É –¥–ª—è linux/amd64 –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
echo "üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Dockerfile.root (—Å–±–æ—Ä–∫–∞ –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞)"
echo "‚ö†Ô∏è  –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 60-120 –º–∏–Ω—É—Ç –Ω–∞ Mac –∏–∑-–∑–∞ –∫—Ä–æ—Å—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ–π –∫–æ–º–ø–∏–ª—è—Ü–∏–∏"
echo ""

# –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
ls -la package.json yarn.lock .yarnrc.yml turbo.json i18n.json 2>/dev/null || echo "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
echo "üìÅ apps/: $(ls -la apps/ | wc -l) —ç–ª–µ–º–µ–Ω—Ç–æ–≤"
echo "üìÅ packages/: $(ls -la packages/ | wc -l) —ç–ª–µ–º–µ–Ω—Ç–æ–≤"
echo "üìÅ scripts/: $(ls -la scripts/ | wc -l) —ç–ª–µ–º–µ–Ω—Ç–æ–≤"
echo ""

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞
docker buildx build --platform linux/amd64 \
  -f Dockerfile.root \
  -t ghcr.io/writepavel/cal.com:root-zoho-fix-amd64 \
  -t ghcr.io/writepavel/cal.com:root-latest-amd64 \
  --build-arg NEXT_PUBLIC_LICENSE_CONSENT=agree \
  --build-arg CALCOM_TELEMETRY_DISABLED=1 \
  --build-arg DATABASE_URL=postgresql://placeholder:placeholder@placeholder:5432/placeholder \
  --build-arg NEXTAUTH_SECRET=docker-build-secret \
  --build-arg CALENDSO_ENCRYPTION_KEY=docker-build-key-change-in-production-32bytes \
  --push \
  .

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ –û–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω –∏ –∑–∞–≥—Ä—É–∂–µ–Ω!"
    echo ""
    echo "üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–≥–∏:"
    echo "  - ghcr.io/writepavel/cal.com:root-zoho-fix-amd64"
    echo "  - ghcr.io/writepavel/cal.com:root-latest-amd64"
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –æ–±—Ä–∞–∑–∞:"
    docker buildx imagetools inspect ghcr.io/writepavel/cal.com:root-zoho-fix-amd64
    echo ""
    echo "üìã –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —ç—Ç–æ–≥–æ –æ–±—Ä–∞–∑–∞:"
    echo "  ‚úÖ –°–æ–±—Ä–∞–Ω –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (–±–µ–∑ calcom/ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)"
    echo "  ‚úÖ –í–∫–ª—é—á–∞–µ—Ç —Ñ–∏–∫—Å OAuth scope –¥–ª—è Zoho Calendar"
    echo "  ‚úÖ –í–∫–ª—é—á–∞–µ—Ç —Ñ–∏–∫—Å —Å–∏–¥–∏–Ω–≥–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Zoho Calendar"
    echo "  ‚úÖ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: linux/amd64 (—Å–æ–≤–º–µ—Å—Ç–∏–º —Å –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º —Å–µ—Ä–≤–µ—Ä–æ–≤)"
    echo ""
    echo "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞ Linux —Å–µ—Ä–≤–µ—Ä–µ:"
    echo "  docker pull ghcr.io/writepavel/cal.com:root-zoho-fix-amd64"
    echo ""
    echo "  docker run -d \\"
    echo "    --name calcom-root-amd64 \\"
    echo "    --platform linux/amd64 \\"
    echo "    -e ZOHOCALENDAR_CLIENT_ID=your-client-id \\"
    echo "    -e ZOHOCALENDAR_CLIENT_SECRET=your-client-secret \\"
    echo "    -e DATABASE_URL=your-database-url \\"
    echo "    -e NEXTAUTH_SECRET=your-secret \\"
    echo "    -e CALENDSO_ENCRYPTION_KEY=your-key \\"
    echo "    -e NEXT_PUBLIC_WEBAPP_URL=https://cal.resultcrafter.com \\"
    echo "    -p 3000:3000 \\"
    echo "    ghcr.io/writepavel/cal.com:root-zoho-fix-amd64"
    echo ""
    echo "üìù –î–ª—è docker-compose –æ–±–Ω–æ–≤–∏—Ç–µ image –≤ –≤–∞—à–µ–º compose —Ñ–∞–π–ª–µ:"
    echo "  image: ghcr.io/writepavel/cal.com:root-zoho-fix-amd64"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏"
    echo ""
    echo "üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
    echo "  1. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
    echo "  2. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    echo "  3. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏ –¥–ª—è Docker (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 8GB+)"
    echo ""
    echo "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    echo "  - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤: ls package.json yarn.lock apps/ packages/"
    echo "  - –£–≤–µ–ª–∏—á–∏—Ç—å –ø–∞–º—è—Ç—å Docker Desktop –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö"
    echo "  - –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à: docker buildx prune"
    exit 1
fi